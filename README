Universal Json
==============

,----
| KNOWN ISSUE: The MakeMaker generated Makefile for the Perl
| interface module puts the modue files in a location where perl
| (at least on Debian) won't find them.
`----

This is a project in development. The parser is complete now, Perl
bindings for it are fully functional and it should have a full set of
test cases. The test suite can be run with

make
make -C bindings/perl test TEST_VERBOSE=1

TEST_VERBOSE isn't strictly necessary, it just causes some output
showing what is actually being tested.

The code should be able to catch all instances of out-of-spec or
erroneous UTF-8-like encodings.

There's meanwile an install target and also, support for building a
Debian package including the library and Perl language
bindings. Details are in the INSTALL file.


Plan
----
JSON is a nice, well-defined data format and it's a real shame that
libraries handling it are so hideously complicated. Further, they (at
least the C libraries I looked at) all suffer from the same design
flaws, namely,

	- they implement some scheme for memory management despite
          they shouldn't

	- they define some sort of data representation for their
          output despite they shouldn't

This is meant to become a small library for parsing JSON text and
formatting some complex object as JSON text with a C core which
delegates anything which requires memory allocation and/ or a data
representation to "someone else" and which can thus be used together
with any other programming language which can interoperate with
compiled C code.

I'm planning to create language bindings for Perl and Python and
possibly, C++, in this order.

-- Rainer Weikusat, rweikusat@talktalk.net
